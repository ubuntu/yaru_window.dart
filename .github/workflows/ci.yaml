name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - uses: bluefireteam/melos-action@v2
        with:
          melos-version: '2.9.0'
      - run: melos analyze

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - uses: bluefireteam/melos-action@v2
        with:
          melos-version: '2.9.0'
      - run: sudo apt update
      - run: sudo apt install -y lcov
      - run: melos coverage
      - uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - uses: bluefireteam/melos-action@v2
        with:
          melos-version: '2.9.0'
      - run: melos format

  linux:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04]
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - run: sudo apt update
      - run: sudo apt install -y clang cmake curl libgtk-3-dev ninja-build pkg-config unzip xvfb
        env:
          DEBIAN_FRONTEND: noninteractive
      - run: flutter pub get
        working-directory: example
      - run: flutter build linux -v
        working-directory: example
      - name: Run flutter test integration_test
        run: xvfb-run -a -s '-screen 0 1024x768x24 +extension GLX' flutter test -d linux integration_test
        working-directory: example

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - run: flutter pub get
        working-directory: example
      - run: flutter build macos -v
        working-directory: example
      - name: Run flutter test integration_test
        if: ${{false}} ### TODO: timeout
        run: flutter test -d macos integration_test
        working-directory: example

  pub:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - run: dart pub global activate melos 2.9.0
      - run: melos exec -c 1 --no-private -- dart pub publish --dry-run

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - uses: bluefireteam/melos-action@v2
        with:
          melos-version: '2.9.0'
      - run: melos test

  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - uses: bluefireteam/melos-action@v2
        with:
          melos-version: '2.9.0'
      - run: flutter pub get
        working-directory: example
      - run: flutter build web -v
        working-directory: example

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - run: flutter pub get
        working-directory: example
      - run: flutter build windows -v
        working-directory: example
      - name: Run flutter test integration_test
        run: flutter test -d windows integration_test
        working-directory: example
